name: Prebuild and Publish

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  prebuild:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            node: 18
            arch: x64
          - os: ubuntu-latest
            node: 20
            arch: x64
          # macOS builds
          - os: macos-latest
            node: 18
            arch: x64
          - os: macos-latest
            node: 20
            arch: x64
          - os: macos-latest
            node: 18
            arch: arm64
          - os: macos-latest
            node: 20
            arch: arm64
    
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          architecture: ${{ matrix.arch }}
          
      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.13.0
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-
            ${{ runner.os }}-node-
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build prebuilds
        run: npm run prebuild
        
      - name: Upload prebuilds
        uses: actions/upload-artifact@v3
        with:
          name: prebuilds-${{ matrix.os }}-${{ matrix.arch }}-node${{ matrix.node }}
          path: prebuilds/
          if-no-files-found: error

  release:
    needs: prebuild
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all prebuilds
        uses: actions/download-artifact@v3
        with:
          path: all-prebuilds
          
      - name: Prepare prebuilds
        run: |
          mkdir -p prebuilds
          cp -r all-prebuilds/*/* prebuilds/
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: prebuilds/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: release
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Download prebuilds
        uses: actions/download-artifact@v3
        with:
          path: prebuilds
          
      - name: Install dependencies
        run: npm ci
        
      - name: Prepare package
        run: |
          npm pack
          ls -la *.tgz
        
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}